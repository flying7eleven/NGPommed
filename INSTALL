Installation instructions for pommed
------------------------------------

pommed  - the daemon
gpomme  - GTK+ client
wmpomme - WindowMaker client


Building
--------

pommed requires:
 - libsmbios (on Intel machines only)
 - pciutils (libpci.a, on Intel machines only)
 - zlib
 - libconfuse
 - libdbus
 - libasound
 - libaudiofile
 - libofapi aka oflib (PowerMac machines only, see below)
 - eject

gpomme requires:
 - libdbus
 - GTK+ 2.0
 - glade 2.0

wmpomme requires:
 - X11 libs
 - libdbus


To build everything, just run make from the top-level directory, or:
 - make pommed, to build pommed
 - make gpomme, to build gpomme
 - make wmpomme, to build wmpomme

For PowerPC machines, if you do not have libofapi installed, can't find it or
do not want to install it, run make pommed OFLIB=1 to use the embedded copy
of libofapi.


Installing
----------

To install pommed:
 - copy pommed somewhere in your PATH (/usr/bin)
 - install pommed/data/KDE_Beep_Beep.wav as /usr/share/pommed/beep.wav
 - install pommed/data/goutte.wav as /usr/share/pommed/goutte.wav
 - copy pommed.conf.(mactel|pmac) as /etc/pommed.conf
 - copy dbus-policy.conf as /etc/dbus-1/system.d/pommed.conf
 - restart dbus

To install gpomme:
 - copy gpomme somewhere in your PATH (/usr/bin)
 - install gpomme/themes as /usr/share/gpomme/themes
 - install gpomme/po/$lang.mo as /usr/share/locale/$lang/LC_MESSAGES/gpomme.mo
 - copy gpomme/gpomme*.desktop to /usr/share/applications
 - copy gpomme/gpomme.glade to /usr/share/gpomme

To install wmpomme:
 - copy wmpomme somewhere in your PATH (/usr/bin)


Using pommed
------------

Launch pommed at startup, a simple init script will do.


Using gpomme and wmpomme
------------------------

 - gpomme: launch gpomme at session startup, using whatever interface your
   desktop environment provides for that.

 - wmpomme: run wmpomme and add it to your dock.

Both gpomme and wmpomme are responsible for running a user-provided helper
when the video switch button is pressed. This helper is responsible for
activating/deactivating the external video output.

The helper can be set system-wide and overriden on a per-user basis:
 - if $HOME/.videoswitch exists, is readable and executable by the running
   user, it is executed;
 - otherwise, if /etc/pommed/videoswitch exists, is readable and executable
   by the running user, it is executed.

The program is invoked without arguments, and argv[0] is "videoswitch".

The videoswitch helper can be anything you want: shell script, perl/python
script or a plain binary; anything executable. It is up to the script or
program to perform any housekeeping/statekeeping that is necessary.

If you want to run urandr or grandr, you can just symlink it as
/etc/pommed/videoswitch or $HOME/.videoswitch.

As different machines require different scripts, pommed can't ship a default
script (there's no one-size-fits-all, unfortunately). If you write a nice
script for your machine and would like to have it shipped with pommed as an
example, mail it to me with a proper license and the machine model.
